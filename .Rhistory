sort(swabsum,decreasing = TRUE)[1:20]
names(sort(swabsum,decreasing = TRUE)[1:20])
heatmap <- data.frame("Swab" = rownames(subset), toporganisms)
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:20])
heatmap <- data.frame("Swab" = rownames(subset), toporganisms)
?data_frame
?data.frame()
heatmap <- data.frame("Swab" = rownames(subset), toporganisms = NA)
View(heatmap)
heatmap <- setNames(data.frame(matrix(ncol = 20, nrow = length(rownames(subset)))), toporganisms, rownames(subset))
heatmap <- setNames(data.frame(matrix(ncol = 20, nrow = length(rownames(subset)))), toporganisms)
View(heatmap)
rownames(heatmap) <- rownames(subset)
View(heatmap)
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(2,2))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:20])
heatmap <- setNames(data.frame(matrix(ncol = 20, nrow = length(rownames(subset)))), toporganisms)
rownames(heatmap) <- rownames(subset)
for (swab in rownames(subset)) {
heatmap["swab",] <- subset[swab,toporganisms]
}
}
View(heatmap)
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(2,2))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:20])
patientheatmap <- setNames(data.frame(matrix(ncol = 20, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
heatmap(patientheatmap)
}
View(patientheatmap)
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(2,2))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:20])
patientheatmap <- setNames(data.frame(matrix(ncol = 20, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
heatmap(as.matrix(t(patientheatmap)))
}
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:20])
patientheatmap <- setNames(data.frame(matrix(ncol = 20, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
heatmap(as.matrix(t(patientheatmap)))
}
NUMBER_OF_TOP_ORGANISMS <- 50
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
heatmap(as.matrix(t(patientheatmap)))
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
heatmap(as.matrix(t(patientheatmap)))
}
?heatmap
install.packages("pheatmap")
library(pheatmap)
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)))
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), scale = TRUE)
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), scale = "column")
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), scale = "row")
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)))
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), main = patient)
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(2,2))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), main = patient)
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
layout.matrix <- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2)
#par(mfrow = c(2,2))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), main = patient)
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
layout(mat = matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2))
#par(mfrow = c(2,2))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), main = patient)
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), main = patient)
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
pheatmap(mat = as.matrix(t(patientheatmap)), main = paste(patient, "Microbiota Data"))
}
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/Microbiota_Data")
microbiome_annotation <- read_delim(file = "20191007_analysis per swab.csv", delim = ";")[1:4]
microbiome_data <- read_delim(file = "20191007otu_table_sort1-3.csv", delim = ";")
for (row in rownames(microbiome_data))
{if (as.numeric(unlist(microbiome_data[row,"swab"])) < 10)
{microbiome_data[row,"swab"] <- as.character(paste("0", microbiome_data[row,"swab"], sep= ""))}}
microbiome_data <- data.frame(tidyr::unite(data = microbiome_data[,c("SampleID","swab")], col = "Sample", sep = "_", remove = TRUE), microbiome_data[,3:length(microbiome_data)])
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/CyTOF_Data")
fcs_files <- list()
exprs <- list()
for (file in list.files()) {try({
sample <- strsplit(file, split = " ")[[1]][1]
fcs_files[[sample]] <- read.FCS(file)
exprs[[sample]] <- as.data.frame(fcs_files[[sample]]@exprs)
colnames(exprs[[sample]])[8:13] <- markernames(fcs_files[[sample]])
})}
# Check if annotation matches data
print("Sample Annotation for Ig-coating experiments matches Data files:")
print(all(sort(names(exprs)) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "Ig-coating", "sampleID"])[[1]])))
print("Sample Annotation for Microbiome experiments matches Data files:")
print(all(sort(microbiome_data$Sample) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "microbiota", "sampleID"])[[1]])))
# Check if annotation matches data
message(paste("Sample Annotation for Ig-coating experiments matches Data files:\,",all(sort(names(exprs)) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "Ig-coating", "sampleID"])[[1]])),"\mSample Annotation for Microbiome experiments matches Data files:\n",all(sort(microbiome_data$Sample) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "microbiota", "sampleID"])[[1]]))))
# Check if annotation matches data
message(paste("Sample Annotation for Ig-coating experiments matches Data files:\n,",all(sort(names(exprs)) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "Ig-coating", "sampleID"])[[1]])),"\nSample Annotation for Microbiome experiments matches Data files:\n",all(sort(microbiome_data$Sample) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "microbiota", "sampleID"])[[1]]))))
# Check if annotation matches data
message(paste("Sample Annotation for Ig-coating experiments matches Data files:\n,",all(sort(names(exprs)) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "Ig-coating", "sampleID"])[[1]])),"\nSample Annotation for Microbiome experiments matches Data files:\n",all(sort(microbiome_data$Sample) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "microbiota", "sampleID"])[[1]]))))
# Check if annotation matches data
message(paste("Sample Annotation for Ig-coating experiments matches Data files:\n",all(sort(names(exprs)) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "Ig-coating", "sampleID"])[[1]])),"\nSample Annotation for Microbiome experiments matches Data files:\n",all(sort(microbiome_data$Sample) == sort(as.list(microbiome_annotation[microbiome_annotation$analysis == "microbiota", "sampleID"])[[1]]))))
## List needed packages
packages <- c("readr","tibble", "dplyr", "flowCore", "pheatmap")
## Check if all packages are installed, if not, install them
if (any(!(packages %in% installed.packages()))) {install.packages(pkgs = packages, quiet = TRUE)}
## Load all required packages
lapply(packages, require, character.only = TRUE)
## List needed packages
packages <- c("readr","tibble", "dplyr", "flowCore", "pheatmap")
## Check if all packages are installed, if not, install them
if (any(!(packages %in% installed.packages()))) {install.packages(pkgs = packages, quiet = TRUE)}
## Load all required packages
lapply(packages, require(), character.only = TRUE)
## List needed packages
packages <- c("readr","tibble", "dplyr", "flowCore", "pheatmap")
## Check if all packages are installed, if not, install them
if (any(!(packages %in% installed.packages()))) {install.packages(pkgs = packages, quiet = TRUE)}
## Load all required packages
lapply(packages, require, character.only = TRUE)
## List needed packages
packages <- c("readr","tibble", "dplyr", "flowCore", "pheatmap")
## Check if all packages are installed, if not, install them
if (any(!(packages %in% installed.packages()))) {install.packages(pkgs = packages, quiet = TRUE)}
## Load all required packages
lapply(packages, library, character.only = TRUE)
## List needed packages
packages <- c("readr","tibble", "dplyr", "flowCore", "pheatmap")
## Check if all packages are installed, if not, install them
if (any(!(packages %in% installed.packages()))) {install.packages(pkgs = packages, quiet = TRUE)}
## Load all required packages
lapply(packages, require, character.only = TRUE)
logpatientheatmap <- filter(is.na(logpatientheatmap))
logpatientheatmap <- t(log(patientheatmap))
logpatientheatmap <- filter(is.na(logpatientheatmap))
logpatientheatmap <- logpatientheatmap[!is.na(ogpatientheatmap)]
logpatientheatmap <- logpatientheatmap[!is.na(logpatientheatmap)]
logpatientheatmap <- t(log(patientheatmap))
logpatientheatmap <- logpatientheatmap[!is.na(logpatientheatmap)]
View(heatmap)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
View(patientheatmap)
logpatientheatmap <- t(log(patientheatmap))
logpatientheatmap <- as.matrix(t(log(patientheatmap)))
View(logpatientheatmap)
logpatientheatmap <- log(patientheatmap)
View(logpatientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
pheatmap(mat = as.matrix(t(logpatientheatmap)), main = paste(patient, "Microbiota Data (log scaled)"), )
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
logpatientheatmap <- log(patientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
pheatmap(mat = as.matrix(t(logpatientheatmap)), main = paste(patient, "Microbiota Counts (log scale)"), )
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
logpatientheatmap <- log(patientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
pheatmap(mat = as.matrix(t(logpatientheatmap)), main = paste(patient, "Microbiota Counts (log scale)"), cluster_rows = toporganisms)
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
logpatientheatmap <- log(patientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
pheatmap(mat = as.matrix(t(logpatientheatmap)), main = paste(patient, "Microbiota Counts (log scale)"), cluster_rows = toporganisms, cluster_cols = rownames(subset))
}
NUMBER_OF_TOP_ORGANISMS <- 25
for (patient in unique(microbiome_annotation$donor)) {
par(mfrow = c(1,3))
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
for (swab in subset$sampleID) {
plot(x= exprs[[swab]]$`IgG: AF 488-A`, y = exprs[[swab]]$`IgA: AF 647-A`, xlab = "IgG", ylab = "IgA", main = swab)
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in rownames(subset)) {
patientheatmap[swab,] <- subset[swab,toporganisms]
}
logpatientheatmap <- log(patientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
pheatmap(mat = as.matrix(t(logpatientheatmap)), main = paste(patient, "Microbiota Counts (log scale)"), cluster_rows = F, cluster_cols = F)
}
?tolower
sessionInfo()
Sys.info(Sys.info())
Sys.info()
home()
platform
platform()
if (pandoc_available(version = NULL, error = FALSE)) {write_yaml(file = "./PATHS.YML", x= data.frame("PANDOC_INSTALLATION_PATH" = Sys.getenv("RSTUDIO_PANDOC")))
} else {paths <- read_yaml("./PATHS.YML");  Sys.setenv(RSTUDIO_PANDOC = paths$PANDOC_INSTALLATION_PATH)}
## Set Pandoc
require(yaml); require(rmarkdown)
if (pandoc_available(version = NULL, error = FALSE)) {write_yaml(file = "./PATHS.YML", x= data.frame("PANDOC_INSTALLATION_PATH" = Sys.getenv("RSTUDIO_PANDOC")))
} else {paths <- read_yaml("./PATHS.YML");  Sys.setenv(RSTUDIO_PANDOC = paths$PANDOC_INSTALLATION_PATH)}
## Import Annotations & Microbiome .csv's
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/Microbiota_Data")
microbiome_annotation <- read_delim(file = "20191007_analysis per swab.csv", delim = ";")[1:4]
## List needed packages
packages <- c("readr","tibble", "dplyr", "flowCore", "pheatmap")
## Check if all packages are installed, if not, install them
if (any(!(packages %in% installed.packages()))) {install.packages(pkgs = packages, quiet = TRUE)}
## Load all required packages
lapply(packages, require, character.only = TRUE)
## Import Annotations & Microbiome .csv's
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/Microbiota_Data")
microbiome_annotation <- read_delim(file = "20191007_analysis per swab.csv", delim = ";")[1:4]
microbiome_data <- read_delim(file = "20191007otu_table_sort1-3.csv", delim = ";")
for (row in rownames(microbiome_data))
{if (as.numeric(unlist(microbiome_data[row,"swab"])) < 10)
{microbiome_data[row,"swab"] <- as.character(paste("0", microbiome_data[row,"swab"], sep= ""))}}
microbiome_data <- data.frame(tidyr::unite(data = microbiome_data[,c("SampleID","swab")], col = "Sample", sep = "_", remove = TRUE), microbiome_data[,3:length(microbiome_data)])
## Import .fcs data files
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/CyTOF_Data")
## Data Pre-Gating
pregating <- function(x, pregate) {
message(paste("Applying Pregate", pregate));
if (grepl("<", pregate, fixed=TRUE)) {filterargs <- strsplit(pregate, split = "<")[[1]]; exprs2 <- dplyr::filter(x, filterargs[1] < as.numeric(filterargs[2]) ) };
if (grepl(">", pregate, fixed=TRUE)) {filterargs <- strsplit(pregate, split = ">")[[1]]; exprs2 <- dplyr::filter(x, filterargs[1] > as.numeric(filterargs[2]) ) };
num_removed <- dim(x)[1] - dim(exprs2)[1]
print(paste("Pregate", pregate, "applied succesfully.", num_removed, "cells have been filtered out."))
return(exprs2) }
pregates <- "SSC-A<27000 SSC-A>2 FSC-A<333000 FSC-A>70"
pregates <- strsplit(pregates, split = " ")[[1]]
fcs_files <- list()
exprs <- list()
for (file in list.files()) {try({
sample <- strsplit(file, split = " ")[[1]][1]
fcs_files[[sample]] <- read.FCS(file)
x <- as.data.frame(fcs_files[[sample]]@exprs)
for (pregate in pregates) {exprs[[sample]] <- pregating(x, pregate)}
colnames(exprs[[sample]])[8:13] <- markernames(fcs_files[[sample]])
})}
