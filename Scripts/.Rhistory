knitr::opts_chunk$set(out.width='1800px', dpi=200)
## Check if all necessary packages are installed by trying to load each
packages_to_check <- c("readr","tibble", "dplyr", "flowCore", "pheatmap", "MASS", "ggplot2", "viridis", "gridExtra")
installation_needed <- unlist(lapply(packages_to_check, require, character.only = TRUE, quietly = TRUE))
installation_needed <- packages_to_check[installation_needed == FALSE]
## Install missing packages
if(length(installation_needed) > 0) {install.packages(pkgs = installation_needed, quiet = TRUE)}
## Load all required packages
installation_needed <- unlist(lapply(packages_to_check, require, character.only = TRUE, quietly = TRUE))
installation_needed <- packages_to_check[installation_needed == FALSE]
## Import Annotations & Microbiome .csv's
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/Microbiota_Data")
microbiome_annotation <- read_delim(file = "20191007_analysis per swab.csv", delim = ";")[1:4]
microbiome_data <- read_delim(file = "20191007otu_table_sort1-3.csv", delim = ";")
for (row in rownames(microbiome_data))
{if (as.numeric(unlist(microbiome_data[row,"swab"])) < 10)
{microbiome_data[row,"swab"] <- as.character(paste("0", microbiome_data[row,"swab"], sep= ""))}}
microbiome_data <- data.frame(tidyr::unite(data = microbiome_data[,c("SampleID","swab")], col = "Sample", sep = "_", remove = TRUE), microbiome_data[,3:length(microbiome_data)])
## Import .fcs data files
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/CyTOF_Data")
## Data Pre-Gating
pregating <- function(x, pregate) {
print(paste("Applying Pregate", pregate))
if (grepl("<", pregate, fixed=TRUE)) {filterargs <- strsplit(pregate, split = "<")[[1]]; y <- x[x[filterargs[1]] < as.numeric(filterargs[2]),]}
if (grepl(">", pregate, fixed=TRUE)) {filterargs <- strsplit(pregate, split = ">")[[1]]; y <- x[x[filterargs[1]] > as.numeric(filterargs[2]),]}
num_removed <- dim(x)[1] - dim(y)[1]
print(paste("Pregate", pregate, "applied succesfully.", num_removed, "cells have been filtered out."))
return(y)}
pregates <- "SSC-A<27000 SSC-A>2 FSC-A<333000 FSC-A>70 FSC-A>70 FSC-A>70"
pregates <- strsplit(pregates, split = " ")[[1]]
biexp <- biexponentialTransform(transformationId="defaultBiexponentialTransform",
a = 0.5, b = 1, c = 0.5, d = 1, f = 0, w = 0,
tol = .Machine$double.eps^0.25, maxit = as.integer(5000))
fcs_files <- list()
fcs_files_transformed <- list()
exprs <- list()
for (file in list.files()) {try({
message(paste("\nAttempting to import file", file))
sample <- strsplit(file, split = " ")[[1]][1]
fcs_files[[sample]] <- read.FCS(file)
fcs_files_transformed[[sample]] <- flowCore::transform(fcs_files[[sample]], transformList(tfun = biexp, from = c("FL2-A","FL4-A")))
exprs[[sample]] <- as.data.frame(fcs_files_transformed[[sample]]@exprs)
for (pregate in pregates) {exprs[[sample]] <- pregating(exprs[[sample]], pregate)}
colnames(exprs[[sample]])[8:13] <- markernames(fcs_files_transformed[[sample]])
})}
View(microbiome_data)
View(microbiome_data)
exprs[[sampleView()]])
View(exprs[[sample]]))
View(exprs[[sample]])
View(fcs_files[[sample@exprs)
View(fcs_files[[sample]]@exprs)
## Import Annotations & Microbiome .csv's
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/Microbiota_Data")
microbiome_annotation <- read_delim(file = "20191007_analysis per swab.csv", delim = ";")[1:4]
microbiome_data <- read_delim(file = "20191007otu_table_sort1-3.csv", delim = ";")
for (row in rownames(microbiome_data))
{if (as.numeric(unlist(microbiome_data[row,"swab"])) < 10)
{microbiome_data[row,"swab"] <- as.character(paste("0", microbiome_data[row,"swab"], sep= ""))}}
microbiome_data <- data.frame(tidyr::unite(data = microbiome_data[,c("SampleID","swab")], col = "Sample", sep = "_", remove = TRUE), microbiome_data[,3:length(microbiome_data)])
## Import .fcs data files
setwd("O:/m.kok2/PROJECTS/FACS & MICROBIOTA/CyTOF_Data")
## Data Pre-Gating
pregating <- function(x, pregate) {
print(paste("Applying Pregate", pregate))
if (grepl("<", pregate, fixed=TRUE)) {filterargs <- strsplit(pregate, split = "<")[[1]]; y <- x[x[filterargs[1]] < as.numeric(filterargs[2]),]}
if (grepl(">", pregate, fixed=TRUE)) {filterargs <- strsplit(pregate, split = ">")[[1]]; y <- x[x[filterargs[1]] > as.numeric(filterargs[2]),]}
num_removed <- dim(x)[1] - dim(y)[1]
print(paste("Pregate", pregate, "applied succesfully.", num_removed, "cells have been filtered out."))
return(y)}
pregates <- "SSC-A<27000 SSC-A>2 FSC-A<333000 FSC-A>70 FL2-A>0 FL4-A>0"
pregates <- strsplit(pregates, split = " ")[[1]]
biexp <- biexponentialTransform(transformationId="defaultBiexponentialTransform",
a = 0.5, b = 1, c = 0.5, d = 1, f = 0, w = 0,
tol = .Machine$double.eps^0.25, maxit = as.integer(5000))
fcs_files <- list()
fcs_files_transformed <- list()
exprs <- list()
for (file in list.files()) {try({
message(paste("\nAttempting to import file", file))
sample <- strsplit(file, split = " ")[[1]][1]
fcs_files[[sample]] <- read.FCS(file)
fcs_files_transformed[[sample]] <- flowCore::transform(fcs_files[[sample]], transformList(tfun = biexp, from = c("FL2-A","FL4-A")))
exprs[[sample]] <- as.data.frame(fcs_files_transformed[[sample]]@exprs)
for (pregate in pregates) {exprs[[sample]] <- pregating(exprs[[sample]], pregate)}
colnames(exprs[[sample]])[8:13] <- markernames(fcs_files_transformed[[sample]])
})}
NUMBER_OF_TOP_ORGANISMS <- 25
get_density <- function(x, y, ...) {
dens <- MASS::kde2d(x, y, ...)
ix <- findInterval(x, dens$x)
iy <- findInterval(y, dens$y)
ii <- cbind(ix, iy)
return(dens$z[ii])
}
theme_set(theme_bw(base_size = 16))
for (patient in unique(microbiome_annotation$donor)) {
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
plots <- list()
for (swab in sort(subset$sampleID)) {
dat <- data.frame(x = exprs[[swab]]$`IgA: AF 647-A`, y = exprs[[swab]]$`IgG: AF 488-A`)
dat$density <- get_density(dat$x, dat$y, n = 100)
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 1, show.legend = TRUE) + scale_color_viridis() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in sort(rownames(subset))) {patientheatmap[swab,] <- subset[swab,toporganisms]}
logpatientheatmap <- log(patientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
logpatientheatmap <- logpatientheatmap[order(rownames(logpatientheatmap)),]
pheat <- pheatmap(mat = as.matrix(t(logpatientheatmap)), silent = TRUE, main = paste(patient, "Microbiota Counts (log scale)"),
cluster_rows = F, cluster_cols = F, fontsize = 5)
grid.arrange(grobs = c(plots[1:3], pheat[4]), ncol = 2, nrow = 2)
}
NUMBER_OF_TOP_ORGANISMS <- 25
get_density <- function(x, y, ...) {
dens <- MASS::kde2d(x, y, ...)
ix <- findInterval(x, dens$x)
iy <- findInterval(y, dens$y)
ii <- cbind(ix, iy)
return(dens$z[ii])
}
theme_set(theme_bw(base_size = 16))
for (patient in unique(microbiome_annotation$donor)) {
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
plots <- list()
for (swab in sort(subset$sampleID)) {
dat <- data.frame(x = exprs[[swab]]$`IgA: AF 647-A`, y = exprs[[swab]]$`IgG: AF 488-A`)
dat$density <- get_density(dat$x, dat$y, n = 100)
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 1, show.legend = TRUE) + scale_color_viridis() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in sort(rownames(subset))) {patientheatmap[swab,] <- subset[swab,toporganisms]}
logpatientheatmap <- log(patientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
logpatientheatmap <- logpatientheatmap[order(rownames(logpatientheatmap)),]
pheat <- pheatmap(mat = as.matrix(t(logpatientheatmap)), silent = TRUE, main = paste(patient, "Microbiota Counts (log scale)"),
cluster_rows = F, cluster_cols = F, fontsize = 5)
grid.arrange(grobs = c(plots[1:3], pheat[4]), ncol = 2, nrow = 2)
}
NUMBER_OF_TOP_ORGANISMS <- 25
get_density <- function(x, y, ...) {
dens <- MASS::kde2d(x, y, ...)
ix <- findInterval(x, dens$x)
iy <- findInterval(y, dens$y)
ii <- cbind(ix, iy)
return(dens$z[ii])
}
theme_set(theme_bw(base_size = 16))
for (patient in unique(microbiome_annotation$donor)) {
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
plots <- list()
for (swab in sort(subset$sampleID)) {
dat <- data.frame(x = exprs[[swab]]$`IgA: AF 647-A`, y = exprs[[swab]]$`IgG: AF 488-A`)
dat$density <- get_density(dat$x, dat$y, n = 100)
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_viridis() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in sort(rownames(subset))) {patientheatmap[swab,] <- subset[swab,toporganisms]}
logpatientheatmap <- log(patientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
logpatientheatmap <- logpatientheatmap[order(rownames(logpatientheatmap)),]
pheat <- pheatmap(mat = as.matrix(t(logpatientheatmap)), silent = TRUE, main = paste(patient, "Microbiota Counts (log scale)"),
cluster_rows = F, cluster_cols = F, fontsize = 5)
grid.arrange(grobs = c(plots[1:3], pheat[4]), ncol = 2, nrow = 2)
}
NUMBER_OF_TOP_ORGANISMS <- 25
get_density <- function(x, y, ...) {
dens <- MASS::kde2d(x, y, ...)
ix <- findInterval(x, dens$x)
iy <- findInterval(y, dens$y)
ii <- cbind(ix, iy)
return(dens$z[ii])
}
theme_set(theme_bw(base_size = 16))
for (patient in unique(microbiome_annotation$donor)) {
subset <- dplyr::filter(microbiome_annotation, donor == patient, analysis == "Ig-coating")
plots <- list()
for (swab in sort(subset$sampleID)) {
dat <- data.frame(x = exprs[[swab]]$`IgA: AF 647-A`, y = exprs[[swab]]$`IgG: AF 488-A`)
dat$density <- get_density(dat$x, dat$y, n = 100)
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_viridis() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
}
subset <- microbiome_data[unlist(strsplit(microbiome_data$Sample, split = "_"))[c(TRUE,FALSE)] == patient,]
subset <- remove_rownames(subset) %>% column_to_rownames(var = "Sample")
toporganisms <- names(sort(colSums(subset),decreasing = TRUE)[1:NUMBER_OF_TOP_ORGANISMS])
patientheatmap <- setNames(data.frame(matrix(ncol = NUMBER_OF_TOP_ORGANISMS, nrow = length(rownames(subset)))), toporganisms)
rownames(patientheatmap) <- rownames(subset)
for (swab in sort(rownames(subset))) {patientheatmap[swab,] <- subset[swab,toporganisms]}
logpatientheatmap <- log(patientheatmap)
logpatientheatmap[logpatientheatmap == -Inf] <- 0
logpatientheatmap <- logpatientheatmap[order(rownames(logpatientheatmap)),]
pheat <- pheatmap(mat = as.matrix(t(logpatientheatmap)), silent = TRUE, main = paste(patient, "Microbiota Counts (log scale)"),
cluster_rows = F, cluster_cols = F, fontsize = 5)
grid.arrange(grobs = c(plots[1:3], pheat[4]), ncol = 2, nrow = 2)
}
scale_color_gradient()
plot(scale_color_gradient())
scale_color_gradientn(colours = rainbow(5))
sp2 + scale_color_gradientn(colours = rainbow(5))
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_brewer() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_brewer() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_brewer() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_brewer(10) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_viridis_c() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_viridis_d() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_brewer() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_continuous() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_discrete() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_distiller() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_grey() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_hue() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_identity() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_viridis() +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
colorRamps::matlab.like
install.packages("colorRamps")
matlab.like
colorRamps::matlab.like()
colorRamps::matlab.like(10)
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_manual(values = colorRamps::matlab.like(100)) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_manual(values = colorRamps::matlab.like()) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_manual(values = colorRamps::matlab.like(n = 10)) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_manual(colorRamps::matlab.like(n = 10)) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_gradient(values = colorRamps::matlab.like(100)) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_gradient(values = colorRamps::matlab.like(100)) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))   ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_colour_gradientn(colours = colorRamps::matlab.like(100)) + labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") + theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
}
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_gradient(values = colorRamps::matlab.like(100)) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))   ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_colour_gradientn(colours = colorRamps::matlab.like(100)) + labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") + theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
}
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_color_gradient(values = colorRamps::matlab.like(100)) +
labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") +
theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))   ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_colour_gradientn(colours = colorRamps::matlab.like(100)) + labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") + theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_colour_gradientn(colours = colorRamps::matlab.like(100)) + labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") + theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_colour_gradientn(colours = colorRamps::matlab.like2(100)) + labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") + theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
dat <- data.frame(x = exprs[[swab]]$`IgA: AF 647-A`, y = exprs[[swab]]$`IgG: AF 488-A`)
dat$density <- get_density(dat$x, dat$y, n = 150)
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_colour_gradientn(colours = colorRamps::matlab.like2(100)) + labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") + theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
dat$density <- get_density(dat$x, dat$y, n = 150)
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_colour_gradientn(colours = colorRamps::matlab.like2(100)) + labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") + theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
dat$density <- get_density(dat$x, dat$y, n = 150)
plots[[swab]] <- ggplot(dat) + geom_point(aes(x, y, color = density), size = 0.5, show.legend = TRUE) + scale_colour_gradientn(colours = colorRamps::matlab.like2(100)) + labs(title = paste("IgG / IgA FACS of Swab", swab), x = "IgA: AF 647-A (Biexp transformed)", y = "IgG: AF 488-A (Biexp transformed)") + theme(text = element_text(size=5), axis.text.x = element_text(size=5, hjust=1), axis.text.y = element_text(size=5, hjust=1))
R.home()
R.home(component = )
R.home(component = TRUE)
