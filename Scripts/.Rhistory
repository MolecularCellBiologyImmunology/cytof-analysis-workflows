knitr::kable(scores[[marker]], label = paste("Scores for Marker ", marker, ":", sep = ""))
knitr::kable(scores[[marker]], label = paste("Scores for Marker ", marker, ":", sep = ""))
spillovercontributing <- data.frame("Marker" = NA, "%" = NA, "%/Max" = NA)
spilloverreceiving <- data.frame("Marker" = NA, "%" = NA, "%/Max" = NA)
View(spilloverreceiving)
spillovercontributing <- data.frame("Marker", "%", "%/Max")
View(spilloverreceiving)
View(spillovercontributing)
spillovercontributing <- data.frame("Marker" = NULL, "%" = NULL, "%/Max" = NULL)
View(spillovercontributing)
spillovercontributing <- rbind(spillovercontributing, c(marker, spilloverpercentage, spilloverscore))
spilloverscore <- uncomp_maxspilloverexpression/(uncomp_maxcurrentexpression*(spilloverpercentage/100))
spillovercontributing <- rbind(spillovercontributing, c(marker, spilloverpercentage, spilloverscore))
View(spillovercontributing)
spillovercontributing
spillovercontributing <- data.frame("Marker" = NA, "%" = NA, "%/Max" = NA)
spillovercontributing
spillovercontributing <- data.frame("Marker" = NA, "Percentage" = NA, "Percentage/MaxExpr" = NA)
spillovercontributing <- rbind(spillovercontributing, c(marker, spilloverpercentage))
View(spilloverreceiving)
spillovercontributing <- data.frame("Marker" = NA, "Percentage" = NA)
View(spillovercontributing)
spillovercontributing <- rbind(spillovercontributing, data.frame(marker, spilloverpercentage))
spillovercontributing <- rbind(spillovercontributing, data.frame("Marker" = marker, "Percentage" = spilloverpercentage))
spilloverreceiving <- rbind(spilloverreceiving, data.frame("Marker" = marker, "Percentage" = spilloverpercentage))
spilloverreceiving <- data.frame("Marker" = NA, "Percentage" = NA)
spilloverreceiving <- rbind(spilloverreceiving, data.frame("Marker" = marker, "Percentage" = spilloverpercentage))
View(spilloverreceiving)
spilloversummary <- full_join(na.omit(spillovercontributing), na.omit(spilloverreceiving), "Marker")
spilloversummary <- dplyr::full_join(na.omit(spillovercontributing), na.omit(spilloverreceiving), "Marker")
View(spilloversummary)
if (marker %in% spillovermarkers) {
spillovercontributing <- data.frame("Marker" = NA, "Contributing To" = NA)
spilloverreceiving <- data.frame("Marker" = NA, "Receiving From" = NA)
for (spillovermarker in spillovermarkers) {
if (spillovermatrix[marker, spillovermarker] > 0) {
spilloverpercentage <- spillovermatrix[marker, spillovermarker]
uncomp_maxspilloverexpression <- quantile(fcs_uncompensated@exprs[,spillovermarker], 0.99)
uncomp_maxcurrentexpression <- quantile(fcs_uncompensated@exprs[,marker], 0.99)
spilloverscore <- uncomp_maxspilloverexpression/(uncomp_maxcurrentexpression*(spilloverpercentage/100))
spillovercontributing <- rbind(spillovercontributing, data.frame("Marker" = marker, "Contributing To" = spilloverpercentage))
#cat("\n### Spillover Warning: This Marker is Contributing Spillover to Marker ", spillovermarker, " at percentage ", spilloverpercentage, ".", sep = "")
#cat("\n- For this experiment, ", spilloverpercentage, "% of current Marker ", marker, "'s max expression (", uncomp_maxcurrentexpression, ") is ", uncomp_maxcurrentexpression*(spilloverpercentage/100), ", which is ",  spilloverscore, "% of Marker ", spillovermarker, "'s max expression (", uncomp_maxspilloverexpression, ").", sep = "" )
}
if (spillovermatrix[spillovermarker,marker] > 0) {
spilloverratio <- spillovermatrix[spillovermarker,marker]
uncomp_maxspilloverexpression <- quantile(fcs_uncompensated@exprs[,spillovermarker], 0.99)
uncomp_maxcurrentexpression <- quantile(fcs_uncompensated@exprs[,marker], 0.99)
spilloverscore <- uncomp_maxcurrentexpression/(uncomp_maxspilloverexpression*(spilloverpercentage/100))
spilloverreceiving <- rbind(spilloverreceiving, data.frame("Marker" = marker, "Receiving From" = spilloverpercentage))
#cat("\n### Spillover Warning: This Marker is Receiving Spillover from Marker ", spillovermarker, " at percentage ", spilloverpercentage, ".", sep = "")
#cat("\n- For this experiment, ", spilloverpercentage, "% of Marker ", spillovermarker, "'s max expression (", uncomp_maxspilloverexpression, ") is ", uncomp_maxspilloverexpression*(spilloverpercentage/100), ", which is ", spilloverscore, "% of current marker ", marker, "'s max expression (", uncomp_maxcurrentexpression, ").", sep = "" )
}
}
}
spilloversummary <- dplyr::full_join(na.omit(spillovercontributing), na.omit(spilloverreceiving), "Marker")
View(spilloversummary)
marker
marker %in% spillovermarkers
spillovermarkers
spillovermarker
marker <- "Tb159Di"
if (marker %in% spillovermarkers) {
spillovercontributing <- data.frame("Marker" = NA, "Contributing To" = NA)
spilloverreceiving <- data.frame("Marker" = NA, "Receiving From" = NA)
for (spillovermarker in spillovermarkers) {
if (spillovermatrix[marker, spillovermarker] > 0) {
spilloverpercentage <- spillovermatrix[marker, spillovermarker]
uncomp_maxspilloverexpression <- quantile(fcs_uncompensated@exprs[,spillovermarker], 0.99)
uncomp_maxcurrentexpression <- quantile(fcs_uncompensated@exprs[,marker], 0.99)
spilloverscore <- uncomp_maxspilloverexpression/(uncomp_maxcurrentexpression*(spilloverpercentage/100))
spillovercontributing <- rbind(spillovercontributing, data.frame("Marker" = marker, "Contributing To" = spilloverpercentage))
#cat("\n### Spillover Warning: This Marker is Contributing Spillover to Marker ", spillovermarker, " at percentage ", spilloverpercentage, ".", sep = "")
#cat("\n- For this experiment, ", spilloverpercentage, "% of current Marker ", marker, "'s max expression (", uncomp_maxcurrentexpression, ") is ", uncomp_maxcurrentexpression*(spilloverpercentage/100), ", which is ",  spilloverscore, "% of Marker ", spillovermarker, "'s max expression (", uncomp_maxspilloverexpression, ").", sep = "" )
}
if (spillovermatrix[spillovermarker,marker] > 0) {
spilloverratio <- spillovermatrix[spillovermarker,marker]
uncomp_maxspilloverexpression <- quantile(fcs_uncompensated@exprs[,spillovermarker], 0.99)
uncomp_maxcurrentexpression <- quantile(fcs_uncompensated@exprs[,marker], 0.99)
spilloverscore <- uncomp_maxcurrentexpression/(uncomp_maxspilloverexpression*(spilloverpercentage/100))
spilloverreceiving <- rbind(spilloverreceiving, data.frame("Marker" = marker, "Receiving From" = spilloverpercentage))
#cat("\n### Spillover Warning: This Marker is Receiving Spillover from Marker ", spillovermarker, " at percentage ", spilloverpercentage, ".", sep = "")
#cat("\n- For this experiment, ", spilloverpercentage, "% of Marker ", spillovermarker, "'s max expression (", uncomp_maxspilloverexpression, ") is ", uncomp_maxspilloverexpression*(spilloverpercentage/100), ", which is ", spilloverscore, "% of current marker ", marker, "'s max expression (", uncomp_maxcurrentexpression, ").", sep = "" )
}
}
}
spilloversummary <- dplyr::full_join(na.omit(spillovercontributing), na.omit(spilloverreceiving), "Marker")
View(spilloversummary)
marker <- "Nd142Di
"
""
marker <- "Nd142Di"
if (marker %in% spillovermarkers) {
spillovercontributing <- data.frame("Marker" = NA, "Contributing To" = NA)
spilloverreceiving <- data.frame("Marker" = NA, "Receiving From" = NA)
for (spillovermarker in spillovermarkers) {
if (spillovermatrix[marker, spillovermarker] > 0) {
spilloverpercentage <- spillovermatrix[marker, spillovermarker]
uncomp_maxspilloverexpression <- quantile(fcs_uncompensated@exprs[,spillovermarker], 0.99)
uncomp_maxcurrentexpression <- quantile(fcs_uncompensated@exprs[,marker], 0.99)
spilloverscore <- uncomp_maxspilloverexpression/(uncomp_maxcurrentexpression*(spilloverpercentage/100))
spillovercontributing <- rbind(spillovercontributing, data.frame("Marker" = marker, "Contributing To" = spilloverpercentage))
#cat("\n### Spillover Warning: This Marker is Contributing Spillover to Marker ", spillovermarker, " at percentage ", spilloverpercentage, ".", sep = "")
#cat("\n- For this experiment, ", spilloverpercentage, "% of current Marker ", marker, "'s max expression (", uncomp_maxcurrentexpression, ") is ", uncomp_maxcurrentexpression*(spilloverpercentage/100), ", which is ",  spilloverscore, "% of Marker ", spillovermarker, "'s max expression (", uncomp_maxspilloverexpression, ").", sep = "" )
}
if (spillovermatrix[spillovermarker,marker] > 0) {
spilloverratio <- spillovermatrix[spillovermarker,marker]
uncomp_maxspilloverexpression <- quantile(fcs_uncompensated@exprs[,spillovermarker], 0.99)
uncomp_maxcurrentexpression <- quantile(fcs_uncompensated@exprs[,marker], 0.99)
spilloverscore <- uncomp_maxcurrentexpression/(uncomp_maxspilloverexpression*(spilloverpercentage/100))
spilloverreceiving <- rbind(spilloverreceiving, data.frame("Marker" = marker, "Receiving From" = spilloverpercentage))
#cat("\n### Spillover Warning: This Marker is Receiving Spillover from Marker ", spillovermarker, " at percentage ", spilloverpercentage, ".", sep = "")
#cat("\n- For this experiment, ", spilloverpercentage, "% of Marker ", spillovermarker, "'s max expression (", uncomp_maxspilloverexpression, ") is ", uncomp_maxspilloverexpression*(spilloverpercentage/100), ", which is ", spilloverscore, "% of current marker ", marker, "'s max expression (", uncomp_maxcurrentexpression, ").", sep = "" )
}
}
}
spilloversummary <- dplyr::full_join(na.omit(spillovercontributing), na.omit(spilloverreceiving), "Marker")
View(spilloversummary)
if (marker %in% spillovermarkers) {
spillovercontributing <- data.frame("Marker" = NA, "Contributing To" = NA)
spilloverreceiving <- data.frame("Marker" = NA, "Receiving From" = NA)
for (spillovermarker in spillovermarkers) {
if (spillovermatrix[marker, spillovermarker] > 0) {
spilloverpercentage <- spillovermatrix[marker, spillovermarker]
uncomp_maxspilloverexpression <- quantile(fcs_uncompensated@exprs[,spillovermarker], 0.99)
uncomp_maxcurrentexpression <- quantile(fcs_uncompensated@exprs[,marker], 0.99)
spilloverscore <- uncomp_maxspilloverexpression/(uncomp_maxcurrentexpression*(spilloverpercentage/100))
spillovercontributing <- rbind(spillovercontributing, data.frame("Marker" = spillovermarker, "Contributing To" = spilloverpercentage))
#cat("\n### Spillover Warning: This Marker is Contributing Spillover to Marker ", spillovermarker, " at percentage ", spilloverpercentage, ".", sep = "")
#cat("\n- For this experiment, ", spilloverpercentage, "% of current Marker ", marker, "'s max expression (", uncomp_maxcurrentexpression, ") is ", uncomp_maxcurrentexpression*(spilloverpercentage/100), ", which is ",  spilloverscore, "% of Marker ", spillovermarker, "'s max expression (", uncomp_maxspilloverexpression, ").", sep = "" )
}
if (spillovermatrix[spillovermarker,marker] > 0) {
spilloverratio <- spillovermatrix[spillovermarker,marker]
uncomp_maxspilloverexpression <- quantile(fcs_uncompensated@exprs[,spillovermarker], 0.99)
uncomp_maxcurrentexpression <- quantile(fcs_uncompensated@exprs[,marker], 0.99)
spilloverscore <- uncomp_maxcurrentexpression/(uncomp_maxspilloverexpression*(spilloverpercentage/100))
spilloverreceiving <- rbind(spilloverreceiving, data.frame("Marker" = spillovermarker, "Receiving From" = spilloverpercentage))
#cat("\n### Spillover Warning: This Marker is Receiving Spillover from Marker ", spillovermarker, " at percentage ", spilloverpercentage, ".", sep = "")
#cat("\n- For this experiment, ", spilloverpercentage, "% of Marker ", spillovermarker, "'s max expression (", uncomp_maxspilloverexpression, ") is ", uncomp_maxspilloverexpression*(spilloverpercentage/100), ", which is ", spilloverscore, "% of current marker ", marker, "'s max expression (", uncomp_maxcurrentexpression, ").", sep = "" )
}
}
}
spilloversummary <- dplyr::full_join(na.omit(spillovercontributing), na.omit(spilloverreceiving), "Marker")
spillovermarker
View(spilloversummary)
spillovermatrix[marker, spillovermarker]
spillovermatrix[marker, spillovermarkers]
as.data.frame(spillovermatrix[marker, spillovermarkers])
t(as.data.frame(spillovermatrix[marker, spillovermarkers]))
spillovermatrix[spillovermatrix == 0 | spillovermatrix == 100] <- NA
spillovermatrix[spillovermatrix == 100] <- NA
t(as.data.frame(spillovermatrix[marker, spillovermarkers]))
t(spillovermatrix[marker, spillovermarkers])
spilloversummary <- dplyr::full_join(t(spillovermatrix[marker, spillovermarkers]), t(spillovermatrix[marker, spillovermarkers]), "Marker")
spillovercontributing <- as.data.frame(t(spillovermatrix[marker, spillovermarkers]))
View(spillovercontributing)
as.data.frame("Marker" = t(spillovermatrix[marker, spillovermarkers]))
spilloverreceiving <- as.data.frame(t(spillovermatrix[spillovermarkers, marker]))
spilloverreceiving <- as.data.frame(spillovermatrix[spillovermarkers, marker])
spillovermatrix[spillovermarkers, marker]
as.list(spillovermatrix[spillovermarkers, marker])
spillovermatrix[, marker]
spillovercontributing <- as.data.frame(t(spillovermatrix[marker, ]))
spillovercontributing
as.data.frame(spillovermatrix[, marker])
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
spillovercontributing
as.data.frame(compensationmatrix[, marker])
spilloverreceiving <- data.frame(marker = compensationmatrix[, marker], row.names = spillovermarkers)
spilloverreceiving
colnames(spillovercontributing) <- "Marker"
spilloverreceiving <- data.frame(Marker = compensationmatrix[, marker], row.names = spillovermarkers)
spillovercontributing
spilloverreceiving
spilloversummary <- na.omit(dplyr::full_join(spillovercontributing, spilloverreceiving, "Marker")
if (params$SPILLOVER == "Give Warnings & Compensate Data") {cat("\n- The Data Below has been compensated for Spillover effects.")}
spilloversummary <- na.omit(dplyr::full_join(spillovercontributing, spilloverreceiving, "Marker"))
View(spilloversummary)
spillovercontributing
spilloverreceiving
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
colnames(spillovercontributing) <- "Contributing"
spilloverreceiving <- data.frame(Receiving = compensationmatrix[, marker], row.names = spillovermarkers)
spilloversummary <- na.omit(dplyr::full_join(spillovercontributing, spilloverreceiving, by = row.names))
c(spillovercontributing, spilloverreceiving)
na.omit(c(spillovercontributing, spilloverreceiving))
data.frame(spillovercontributing, spilloverreceiving)
na.omit(data.frame(spillovercontributing, spilloverreceiving))
spillovermatrix[spillovermatrix == 100] <- NA
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
colnames(spillovercontributing) <- "Contributing"
spilloverreceiving <- data.frame(Receiving = compensationmatrix[, marker], row.names = spillovermarkers)
spilloversummary <- na.omit(data.frame(spillovercontributing, spilloverreceiving))
spilloversummary
?na.omit
apply(spilloversummary, 1, function(x) all(is.na(x)))
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
colnames(spillovercontributing) <- "Contributing"
spilloverreceiving <- data.frame(Receiving = compensationmatrix[, marker], row.names = spillovermarkers)
spilloversummary <- data.frame(spillovercontributing, spilloverreceiving)
apply(spilloversummary, 1, function(x) all(is.na(x)))
!(apply(spilloversummary, 1, function(x) all(is.na(x))))
spilloversummary[!(apply(spilloversummary, 1, function(x) all(is.na(x))))]
spilloversummary[!(apply(spilloversummary, 1, function(x) all(is.na(x)))),]
if (params$SPILLOVER != "Do Nothing") {
if (marker %in% spillovermarkers) {
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
colnames(spillovercontributing) <- "Contributing"
spilloverreceiving <- data.frame(Receiving = compensationmatrix[, marker], row.names = spillovermarkers)
spilloversummary <- data.frame(spillovercontributing, spilloverreceiving)
spilloversummary <- spilloversummary[!(apply(spilloversummary, 1, function(x) all(is.na(x)))),]
knitr::kable(spilloversummary, label = paste("Spillover Summary for Marker", marker, ":", sep = ""))
if (params$SPILLOVER == "Give Warnings & Compensate Data") {cat("\n- The Graph Below has been compensated for Spillover effects.")}
} else {cat("Marker", marker, "was not found in Spillover Table, not checking for spillover / compensating.", sep = "")}
}
if (params$SPILLOVER != "Do Nothing") {
if (marker %in% spillovermarkers) {
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
colnames(spillovercontributing) <- "Contributing"
spilloverreceiving <- data.frame(Receiving = compensationmatrix[, marker], row.names = spillovermarkers)
spilloversummary <- data.frame(spillovercontributing, spilloverreceiving)
spilloversummary <- spilloversummary[!(apply(spilloversummary, 1, function(x) all(is.na(x)))),]
knitr::kable(spilloversummary, label = paste("Spillover Summary for Marker", marker, ":", sep = ""))
if (params$SPILLOVER == "Give Warnings & Compensate Data") {cat("\n- The Graph Below has been compensated for Spillover effects.")}
} else {cat("Marker", marker, "was not found in Spillover Table, not checking for spillover / compensating.", sep = "")}
}
spilloversummary
knitr::kable(spilloversummary, label = paste("Spillover Summary for Marker", marker, ":", sep = ""))
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
colnames(spillovercontributing) <- "Contributing"
spilloverreceiving <- data.frame(Receiving = compensationmatrix[, marker], row.names = spillovermarkers)
spilloversummary <- data.frame(spillovercontributing, spilloverreceiving)
spilloversummary <- spilloversummary[!(apply(spilloversummary, 1, function(x) all(is.na(x)))),]
knitr::kable(spilloversummary, label = paste("Spillover Summary for Marker", marker, ":", sep = ""))
if (params$SPILLOVER == "Give Warnings & Compensate Data") {cat("\n- The Graph Below has been compensated for Spillover effects.")}
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
colnames(spillovercontributing) <- "Contributing"
spilloverreceiving <- data.frame(Receiving = compensationmatrix[, marker], row.names = spillovermarkers)
spilloversummary <- data.frame(spillovercontributing, spilloverreceiving)
spilloversummary <- spilloversummary[!(apply(spilloversummary, 1, function(x) all(is.na(x)))),]
knitr::kable(spilloversummary, label = paste("Spillover Summary for Marker", marker, ":", sep = ""))
spillovercontributing <- as.data.frame(t(compensationmatrix[marker, ]))
colnames(spillovercontributing) <- "Contributing"
spilloverreceiving <- data.frame(Receiving = compensationmatrix[, marker], row.names = spillovermarkers)
spilloversummary <- data.frame(spillovercontributing, spilloverreceiving)
spilloversummary <- spilloversummary[!(apply(spilloversummary, 1, function(x) all(is.na(x)))),]
knitr::kable(spilloversummary, label = paste("Spillover Summary for Marker", marker, ":", sep = ""))
if (params$SPILLOVER == "Give Warnings & Compensate Data") {cat("\n- The Graph Below has been compensated for Spillover effects.")}
setwd("M:/Shared/CyTOF/cytof-analysis-mike/Scripts")
